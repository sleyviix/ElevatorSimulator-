/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Enumeration;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author User1
 */
public class MainFrame extends javax.swing.JFrame {
    public ArrayList<FloorPanel> floorList = new ArrayList<>();
    public ElevatorPanel elevator = new ElevatorPanel();
    private JPanel blankPanel = new JPanel();
    private int numFloors;
    private int clientComplaints = 0;
    private final int MAX_ANGERY_CLIENTS;
    private final int MAX_TICKS;
    
    /**
     * Creates new form MainFrame
     * @param numFloors
     * @param MAX_ANGERY_CLIENTS
     * @param maxTicks
     */
    public MainFrame( int numFloors, final int MAX_ANGERY_CLIENTS, int maxTicks ) {
        initComponents();
        this.numFloors = numFloors;
        this.MAX_ANGERY_CLIENTS = MAX_ANGERY_CLIENTS;
        MAX_TICKS = maxTicks;
        for ( int i = 0; i < numFloors; i++ ) floorList.add( new FloorPanel( i ) );
        displayTable.setModel( new DefaultTableModel(numFloors, 2) { 
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        
        });
        displayTable.setRowHeight(200);
        displayTable.setShowGrid( false );
        Enumeration<TableColumn> tmEnum = displayTable.getColumnModel().getColumns();
        while ( tmEnum.hasMoreElements() )  tmEnum.nextElement().setCellRenderer(new TableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {
                return col == 1 ? floorList.get(-1 +  numFloors - row ) : (-1 + numFloors - row) == elevator.getFloor()? elevator : blankPanel;
            }
        });
//        jList1.setListData( floorList.toArray() );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        displayTablePanel = new javax.swing.JPanel();
        displayTableScrollPane = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();
        tickLbl = new javax.swing.JLabel();
        delayLabelLbl = new javax.swing.JLabel();
        timeDelaySlider = new javax.swing.JSlider();
        delayLbl = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        advanceSimLbl = new javax.swing.JLabel();
        advanceSimRateCmb = new javax.swing.JComboBox<>();
        advanceSimBtn = new javax.swing.JButton();
        angeryClientsLbl = new javax.swing.JLabel();
        playPauseSimBtn = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        displayTablePanel.setLayout(new java.awt.BorderLayout());

        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        displayTableScrollPane.setViewportView(displayTable);

        displayTablePanel.add(displayTableScrollPane, java.awt.BorderLayout.CENTER);

        tickLbl.setText("Tick 0");

        delayLabelLbl.setText("Delay (ms) :");

        timeDelaySlider.setMaximum(1000);
        timeDelaySlider.setPaintLabels(true);
        timeDelaySlider.setPaintTicks(true);
        timeDelaySlider.setValue(1000);
        timeDelaySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                timeDelaySliderStateChanged(evt);
            }
        });

        delayLbl.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        delayLbl.setText("1000");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        advanceSimLbl.setText("Advance Simulation By");

        advanceSimRateCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 tick", "10 ticks", "100 ticks" }));

        advanceSimBtn.setText("Go");
        advanceSimBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advanceSimBtnActionPerformed(evt);
            }
        });

        angeryClientsLbl.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        angeryClientsLbl.setText("Client Complaints: 0");

        playPauseSimBtn.setText("Play Simulation");
        playPauseSimBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playPauseSimBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(displayTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(playPauseSimBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(advanceSimLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(advanceSimRateCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(advanceSimBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delayLabelLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timeDelaySlider, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tickLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(angeryClientsLbl)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(angeryClientsLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                            .addComponent(tickLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(timeDelaySlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(delayLabelLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(delayLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(playPauseSimBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(advanceSimBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(advanceSimRateCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(advanceSimLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(12, 12, 12))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void updateTable() { 
        displayTable.updateUI();
    }
    
    public void tick( int tickNum ) {
        tickLbl.setText( "Tick " + tickNum + "/" + MAX_TICKS );
        displayTable.updateUI();
    }
    
    public void disableControls( boolean b ) { 
        playPauseSimBtn.setEnabled( !b );
        advanceSimBtn.setEnabled( !b );
    }
    
    public void clientComlaint() { 
        angeryClientsLbl.setText( "Client Complaints: " + ++clientComplaints );
        if ( clientComplaints > MAX_ANGERY_CLIENTS ) angeryClientsLbl.setForeground(Color.RED);
    } 
    
    private void timeDelaySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_timeDelaySliderStateChanged
        firePropertyChange( "simSpeedChange", -1, timeDelaySlider.getValue() );
        delayLbl.setText( String.valueOf( timeDelaySlider.getValue() ) );
    }//GEN-LAST:event_timeDelaySliderStateChanged

    private void advanceSimBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advanceSimBtnActionPerformed
        firePropertyChange( "simAdvanceOnce", 0, advanceSimRateCmb.getSelectedIndex() == 2? 100 : ( advanceSimRateCmb.getSelectedIndex() == 1? 10 : 1 ) );
    }//GEN-LAST:event_advanceSimBtnActionPerformed

    private void playPauseSimBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playPauseSimBtnActionPerformed
        firePropertyChange( "simStateChange", playPauseSimBtn.isSelected(), !playPauseSimBtn.isSelected() );
        advanceSimBtn.setEnabled( !playPauseSimBtn.isSelected() );
    }//GEN-LAST:event_playPauseSimBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton advanceSimBtn;
    private javax.swing.JLabel advanceSimLbl;
    private javax.swing.JComboBox<String> advanceSimRateCmb;
    private javax.swing.JLabel angeryClientsLbl;
    private javax.swing.JLabel delayLabelLbl;
    private javax.swing.JLabel delayLbl;
    private javax.swing.JTable displayTable;
    private javax.swing.JPanel displayTablePanel;
    private javax.swing.JScrollPane displayTableScrollPane;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JToggleButton playPauseSimBtn;
    private javax.swing.JLabel tickLbl;
    private javax.swing.JSlider timeDelaySlider;
    // End of variables declaration//GEN-END:variables
}
